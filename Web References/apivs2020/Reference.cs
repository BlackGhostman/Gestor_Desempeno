//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Gestor_Desempeno.apivs2020 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsapiSoap", Namespace="http://vision2020serverapi.org/")]
    public partial class wsapi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Insertar_Caducidad_NotificacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_CaducidadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Actualizar_CaducidadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_idgavetas_UploaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoCompletar_Texto_LlaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Verifica_Acceso_GavetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Valores_PredefinidosOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_ValoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback Existe_CarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExisteCarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Existe_IdRegOperationCompleted;
        
        private System.Threading.SendOrPostCallback LlavesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Modificar_CarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModificarCarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_CarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Arbol_EstructuraOperationCompleted;
        
        private System.Threading.SendOrPostCallback EsUsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback Parametros_GlobalesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Devuelve_Ids_Gaveta_CarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_De_DocumentosOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buscar_CarpetasOperationCompleted;
        
        private System.Threading.SendOrPostCallback Datos_De_LaCarpetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Archivar_DocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchivarDocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchivarDocumentoDevuelveIdObjetoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Archivar_DocumentoByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchivarDocumentoByteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchivarDocumentoByteDevuelveIdObjetoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Visor_DocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Visor_Documento_MailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Descargar_DocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Visor_Documento_User_TempOperationCompleted;
        
        private System.Threading.SendOrPostCallback Descargar_Documento_User_TempOperationCompleted;
        
        private System.Threading.SendOrPostCallback Crear_UsuarioOperationCompleted;
        
        private System.Threading.SendOrPostCallback Cambiar_ClaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_De_Archivos_SoportadosOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_Nota_ExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_Nota_DocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_Notas_ExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_Notas_DocumentoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Modulo_AccOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_Carpeta_AccOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_Nota_AccOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insertar_Caducidad_AccOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_Usuarios_CaducidadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Devolver_Root_GavetaOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_UsuariosOperationCompleted;
        
        private System.Threading.SendOrPostCallback start_IncrementalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Documentador_AccOperationCompleted;
        
        private System.Threading.SendOrPostCallback Lista_De_Documentos_UIOperationCompleted;
        
        private System.Threading.SendOrPostCallback Encriptar_TextoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsapi() {
            this.Url = global::Gestor_Desempeno.Properties.Settings.Default.Gestor_Desempeno_apivs2020_wsapi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Insertar_Caducidad_NotificacionCompletedEventHandler Insertar_Caducidad_NotificacionCompleted;
        
        /// <remarks/>
        public event Insertar_CaducidadCompletedEventHandler Insertar_CaducidadCompleted;
        
        /// <remarks/>
        public event Actualizar_CaducidadCompletedEventHandler Actualizar_CaducidadCompleted;
        
        /// <remarks/>
        public event Lista_idgavetas_UploaderCompletedEventHandler Lista_idgavetas_UploaderCompleted;
        
        /// <remarks/>
        public event AutoCompletar_Texto_LlaveCompletedEventHandler AutoCompletar_Texto_LlaveCompleted;
        
        /// <remarks/>
        public event Verifica_Acceso_GavetaCompletedEventHandler Verifica_Acceso_GavetaCompleted;
        
        /// <remarks/>
        public event Valores_PredefinidosCompletedEventHandler Valores_PredefinidosCompleted;
        
        /// <remarks/>
        public event Lista_ValoresCompletedEventHandler Lista_ValoresCompleted;
        
        /// <remarks/>
        public event Existe_CarpetaCompletedEventHandler Existe_CarpetaCompleted;
        
        /// <remarks/>
        public event ExisteCarpetaCompletedEventHandler ExisteCarpetaCompleted;
        
        /// <remarks/>
        public event Existe_IdRegCompletedEventHandler Existe_IdRegCompleted;
        
        /// <remarks/>
        public event LlavesCompletedEventHandler LlavesCompleted;
        
        /// <remarks/>
        public event Modificar_CarpetaCompletedEventHandler Modificar_CarpetaCompleted;
        
        /// <remarks/>
        public event ModificarCarpetaCompletedEventHandler ModificarCarpetaCompleted;
        
        /// <remarks/>
        public event Insertar_CarpetaCompletedEventHandler Insertar_CarpetaCompleted;
        
        /// <remarks/>
        public event Arbol_EstructuraCompletedEventHandler Arbol_EstructuraCompleted;
        
        /// <remarks/>
        public event EsUsuarioCompletedEventHandler EsUsuarioCompleted;
        
        /// <remarks/>
        public event Parametros_GlobalesCompletedEventHandler Parametros_GlobalesCompleted;
        
        /// <remarks/>
        public event Devuelve_Ids_Gaveta_CarpetaCompletedEventHandler Devuelve_Ids_Gaveta_CarpetaCompleted;
        
        /// <remarks/>
        public event Lista_De_DocumentosCompletedEventHandler Lista_De_DocumentosCompleted;
        
        /// <remarks/>
        public event Buscar_CarpetasCompletedEventHandler Buscar_CarpetasCompleted;
        
        /// <remarks/>
        public event Datos_De_LaCarpetaCompletedEventHandler Datos_De_LaCarpetaCompleted;
        
        /// <remarks/>
        public event Archivar_DocumentoCompletedEventHandler Archivar_DocumentoCompleted;
        
        /// <remarks/>
        public event ArchivarDocumentoCompletedEventHandler ArchivarDocumentoCompleted;
        
        /// <remarks/>
        public event ArchivarDocumentoDevuelveIdObjetoCompletedEventHandler ArchivarDocumentoDevuelveIdObjetoCompleted;
        
        /// <remarks/>
        public event Archivar_DocumentoByteCompletedEventHandler Archivar_DocumentoByteCompleted;
        
        /// <remarks/>
        public event ArchivarDocumentoByteCompletedEventHandler ArchivarDocumentoByteCompleted;
        
        /// <remarks/>
        public event ArchivarDocumentoByteDevuelveIdObjetoCompletedEventHandler ArchivarDocumentoByteDevuelveIdObjetoCompleted;
        
        /// <remarks/>
        public event Visor_DocumentoCompletedEventHandler Visor_DocumentoCompleted;
        
        /// <remarks/>
        public event Visor_Documento_MailCompletedEventHandler Visor_Documento_MailCompleted;
        
        /// <remarks/>
        public event Descargar_DocumentoCompletedEventHandler Descargar_DocumentoCompleted;
        
        /// <remarks/>
        public event Visor_Documento_User_TempCompletedEventHandler Visor_Documento_User_TempCompleted;
        
        /// <remarks/>
        public event Descargar_Documento_User_TempCompletedEventHandler Descargar_Documento_User_TempCompleted;
        
        /// <remarks/>
        public event Crear_UsuarioCompletedEventHandler Crear_UsuarioCompleted;
        
        /// <remarks/>
        public event Cambiar_ClaveCompletedEventHandler Cambiar_ClaveCompleted;
        
        /// <remarks/>
        public event Lista_De_Archivos_SoportadosCompletedEventHandler Lista_De_Archivos_SoportadosCompleted;
        
        /// <remarks/>
        public event Insertar_Nota_ExpedienteCompletedEventHandler Insertar_Nota_ExpedienteCompleted;
        
        /// <remarks/>
        public event Insertar_Nota_DocumentoCompletedEventHandler Insertar_Nota_DocumentoCompleted;
        
        /// <remarks/>
        public event Lista_Notas_ExpedienteCompletedEventHandler Lista_Notas_ExpedienteCompleted;
        
        /// <remarks/>
        public event Lista_Notas_DocumentoCompletedEventHandler Lista_Notas_DocumentoCompleted;
        
        /// <remarks/>
        public event Modulo_AccCompletedEventHandler Modulo_AccCompleted;
        
        /// <remarks/>
        public event Insertar_Carpeta_AccCompletedEventHandler Insertar_Carpeta_AccCompleted;
        
        /// <remarks/>
        public event Insertar_Nota_AccCompletedEventHandler Insertar_Nota_AccCompleted;
        
        /// <remarks/>
        public event Insertar_Caducidad_AccCompletedEventHandler Insertar_Caducidad_AccCompleted;
        
        /// <remarks/>
        public event Lista_Usuarios_CaducidadCompletedEventHandler Lista_Usuarios_CaducidadCompleted;
        
        /// <remarks/>
        public event Devolver_Root_GavetaCompletedEventHandler Devolver_Root_GavetaCompleted;
        
        /// <remarks/>
        public event Lista_UsuariosCompletedEventHandler Lista_UsuariosCompleted;
        
        /// <remarks/>
        public event start_IncrementalCompletedEventHandler start_IncrementalCompleted;
        
        /// <remarks/>
        public event Documentador_AccCompletedEventHandler Documentador_AccCompleted;
        
        /// <remarks/>
        public event Lista_De_Documentos_UICompletedEventHandler Lista_De_Documentos_UICompleted;
        
        /// <remarks/>
        public event Encriptar_TextoCompletedEventHandler Encriptar_TextoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Caducidad_Notificacion", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Caducidad_Notificacion(string Usuario, string Clave, string IdReg, string Idobj, string Usuario_Notificar, string idCad) {
            object[] results = this.Invoke("Insertar_Caducidad_Notificacion", new object[] {
                        Usuario,
                        Clave,
                        IdReg,
                        Idobj,
                        Usuario_Notificar,
                        idCad});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Caducidad_NotificacionAsync(string Usuario, string Clave, string IdReg, string Idobj, string Usuario_Notificar, string idCad) {
            this.Insertar_Caducidad_NotificacionAsync(Usuario, Clave, IdReg, Idobj, Usuario_Notificar, idCad, null);
        }
        
        /// <remarks/>
        public void Insertar_Caducidad_NotificacionAsync(string Usuario, string Clave, string IdReg, string Idobj, string Usuario_Notificar, string idCad, object userState) {
            if ((this.Insertar_Caducidad_NotificacionOperationCompleted == null)) {
                this.Insertar_Caducidad_NotificacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Caducidad_NotificacionOperationCompleted);
            }
            this.InvokeAsync("Insertar_Caducidad_Notificacion", new object[] {
                        Usuario,
                        Clave,
                        IdReg,
                        Idobj,
                        Usuario_Notificar,
                        idCad}, this.Insertar_Caducidad_NotificacionOperationCompleted, userState);
        }
        
        private void OnInsertar_Caducidad_NotificacionOperationCompleted(object arg) {
            if ((this.Insertar_Caducidad_NotificacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Caducidad_NotificacionCompleted(this, new Insertar_Caducidad_NotificacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Caducidad", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Caducidad(string Usuario, string Clave, string Archivadores, string Gaveta, string IdReg, string Idobj, string Fecha_Caducidad, string Fecha_Notificacion, string Mensaje, string NombreArchivo) {
            object[] results = this.Invoke("Insertar_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdReg,
                        Idobj,
                        Fecha_Caducidad,
                        Fecha_Notificacion,
                        Mensaje,
                        NombreArchivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_CaducidadAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdReg, string Idobj, string Fecha_Caducidad, string Fecha_Notificacion, string Mensaje, string NombreArchivo) {
            this.Insertar_CaducidadAsync(Usuario, Clave, Archivadores, Gaveta, IdReg, Idobj, Fecha_Caducidad, Fecha_Notificacion, Mensaje, NombreArchivo, null);
        }
        
        /// <remarks/>
        public void Insertar_CaducidadAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdReg, string Idobj, string Fecha_Caducidad, string Fecha_Notificacion, string Mensaje, string NombreArchivo, object userState) {
            if ((this.Insertar_CaducidadOperationCompleted == null)) {
                this.Insertar_CaducidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_CaducidadOperationCompleted);
            }
            this.InvokeAsync("Insertar_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdReg,
                        Idobj,
                        Fecha_Caducidad,
                        Fecha_Notificacion,
                        Mensaje,
                        NombreArchivo}, this.Insertar_CaducidadOperationCompleted, userState);
        }
        
        private void OnInsertar_CaducidadOperationCompleted(object arg) {
            if ((this.Insertar_CaducidadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_CaducidadCompleted(this, new Insertar_CaducidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Actualizar_Caducidad", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Actualizar_Caducidad(string Usuario, string Clave, string Id_Obj, string Archivadores, string Gaveta, string Id_Reg, string Nombre_Archivo, int Tam_Bytes) {
            object[] results = this.Invoke("Actualizar_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Id_Obj,
                        Archivadores,
                        Gaveta,
                        Id_Reg,
                        Nombre_Archivo,
                        Tam_Bytes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Actualizar_CaducidadAsync(string Usuario, string Clave, string Id_Obj, string Archivadores, string Gaveta, string Id_Reg, string Nombre_Archivo, int Tam_Bytes) {
            this.Actualizar_CaducidadAsync(Usuario, Clave, Id_Obj, Archivadores, Gaveta, Id_Reg, Nombre_Archivo, Tam_Bytes, null);
        }
        
        /// <remarks/>
        public void Actualizar_CaducidadAsync(string Usuario, string Clave, string Id_Obj, string Archivadores, string Gaveta, string Id_Reg, string Nombre_Archivo, int Tam_Bytes, object userState) {
            if ((this.Actualizar_CaducidadOperationCompleted == null)) {
                this.Actualizar_CaducidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActualizar_CaducidadOperationCompleted);
            }
            this.InvokeAsync("Actualizar_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Id_Obj,
                        Archivadores,
                        Gaveta,
                        Id_Reg,
                        Nombre_Archivo,
                        Tam_Bytes}, this.Actualizar_CaducidadOperationCompleted, userState);
        }
        
        private void OnActualizar_CaducidadOperationCompleted(object arg) {
            if ((this.Actualizar_CaducidadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Actualizar_CaducidadCompleted(this, new Actualizar_CaducidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_idgavetas_Uploader", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_idgavetas_Uploader(string logusu) {
            object[] results = this.Invoke("Lista_idgavetas_Uploader", new object[] {
                        logusu});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_idgavetas_UploaderAsync(string logusu) {
            this.Lista_idgavetas_UploaderAsync(logusu, null);
        }
        
        /// <remarks/>
        public void Lista_idgavetas_UploaderAsync(string logusu, object userState) {
            if ((this.Lista_idgavetas_UploaderOperationCompleted == null)) {
                this.Lista_idgavetas_UploaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_idgavetas_UploaderOperationCompleted);
            }
            this.InvokeAsync("Lista_idgavetas_Uploader", new object[] {
                        logusu}, this.Lista_idgavetas_UploaderOperationCompleted, userState);
        }
        
        private void OnLista_idgavetas_UploaderOperationCompleted(object arg) {
            if ((this.Lista_idgavetas_UploaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_idgavetas_UploaderCompleted(this, new Lista_idgavetas_UploaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/AutoCompletar_Texto_Llave", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable AutoCompletar_Texto_Llave(string Texto, string Id_Gaveta, string Id_Col) {
            object[] results = this.Invoke("AutoCompletar_Texto_Llave", new object[] {
                        Texto,
                        Id_Gaveta,
                        Id_Col});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void AutoCompletar_Texto_LlaveAsync(string Texto, string Id_Gaveta, string Id_Col) {
            this.AutoCompletar_Texto_LlaveAsync(Texto, Id_Gaveta, Id_Col, null);
        }
        
        /// <remarks/>
        public void AutoCompletar_Texto_LlaveAsync(string Texto, string Id_Gaveta, string Id_Col, object userState) {
            if ((this.AutoCompletar_Texto_LlaveOperationCompleted == null)) {
                this.AutoCompletar_Texto_LlaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoCompletar_Texto_LlaveOperationCompleted);
            }
            this.InvokeAsync("AutoCompletar_Texto_Llave", new object[] {
                        Texto,
                        Id_Gaveta,
                        Id_Col}, this.AutoCompletar_Texto_LlaveOperationCompleted, userState);
        }
        
        private void OnAutoCompletar_Texto_LlaveOperationCompleted(object arg) {
            if ((this.AutoCompletar_Texto_LlaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoCompletar_Texto_LlaveCompleted(this, new AutoCompletar_Texto_LlaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Verifica_Acceso_Gaveta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Verifica_Acceso_Gaveta(string usuario, string idgaveta) {
            object[] results = this.Invoke("Verifica_Acceso_Gaveta", new object[] {
                        usuario,
                        idgaveta});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Verifica_Acceso_GavetaAsync(string usuario, string idgaveta) {
            this.Verifica_Acceso_GavetaAsync(usuario, idgaveta, null);
        }
        
        /// <remarks/>
        public void Verifica_Acceso_GavetaAsync(string usuario, string idgaveta, object userState) {
            if ((this.Verifica_Acceso_GavetaOperationCompleted == null)) {
                this.Verifica_Acceso_GavetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifica_Acceso_GavetaOperationCompleted);
            }
            this.InvokeAsync("Verifica_Acceso_Gaveta", new object[] {
                        usuario,
                        idgaveta}, this.Verifica_Acceso_GavetaOperationCompleted, userState);
        }
        
        private void OnVerifica_Acceso_GavetaOperationCompleted(object arg) {
            if ((this.Verifica_Acceso_GavetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Verifica_Acceso_GavetaCompleted(this, new Verifica_Acceso_GavetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Valores_Predefinidos", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Valores_Predefinidos(string Archivadores, string Gaveta, string Id_Gaveta) {
            object[] results = this.Invoke("Valores_Predefinidos", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Valores_PredefinidosAsync(string Archivadores, string Gaveta, string Id_Gaveta) {
            this.Valores_PredefinidosAsync(Archivadores, Gaveta, Id_Gaveta, null);
        }
        
        /// <remarks/>
        public void Valores_PredefinidosAsync(string Archivadores, string Gaveta, string Id_Gaveta, object userState) {
            if ((this.Valores_PredefinidosOperationCompleted == null)) {
                this.Valores_PredefinidosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValores_PredefinidosOperationCompleted);
            }
            this.InvokeAsync("Valores_Predefinidos", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta}, this.Valores_PredefinidosOperationCompleted, userState);
        }
        
        private void OnValores_PredefinidosOperationCompleted(object arg) {
            if ((this.Valores_PredefinidosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Valores_PredefinidosCompleted(this, new Valores_PredefinidosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_Valores", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_Valores(string Llave, string Id_Llave) {
            object[] results = this.Invoke("Lista_Valores", new object[] {
                        Llave,
                        Id_Llave});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_ValoresAsync(string Llave, string Id_Llave) {
            this.Lista_ValoresAsync(Llave, Id_Llave, null);
        }
        
        /// <remarks/>
        public void Lista_ValoresAsync(string Llave, string Id_Llave, object userState) {
            if ((this.Lista_ValoresOperationCompleted == null)) {
                this.Lista_ValoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_ValoresOperationCompleted);
            }
            this.InvokeAsync("Lista_Valores", new object[] {
                        Llave,
                        Id_Llave}, this.Lista_ValoresOperationCompleted, userState);
        }
        
        private void OnLista_ValoresOperationCompleted(object arg) {
            if ((this.Lista_ValoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_ValoresCompleted(this, new Lista_ValoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Existe_Carpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Existe_Carpeta(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves) {
            object[] results = this.Invoke("Existe_Carpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Llaves,
                        ValoresLlaves});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Existe_CarpetaAsync(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves) {
            this.Existe_CarpetaAsync(Archivadores, Gaveta, Llaves, ValoresLlaves, null);
        }
        
        /// <remarks/>
        public void Existe_CarpetaAsync(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves, object userState) {
            if ((this.Existe_CarpetaOperationCompleted == null)) {
                this.Existe_CarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExiste_CarpetaOperationCompleted);
            }
            this.InvokeAsync("Existe_Carpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Llaves,
                        ValoresLlaves}, this.Existe_CarpetaOperationCompleted, userState);
        }
        
        private void OnExiste_CarpetaOperationCompleted(object arg) {
            if ((this.Existe_CarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Existe_CarpetaCompleted(this, new Existe_CarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ExisteCarpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExisteCarpeta(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves) {
            object[] results = this.Invoke("ExisteCarpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Llaves,
                        ValoresLlaves});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExisteCarpetaAsync(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves) {
            this.ExisteCarpetaAsync(Archivadores, Gaveta, Llaves, ValoresLlaves, null);
        }
        
        /// <remarks/>
        public void ExisteCarpetaAsync(string Archivadores, string Gaveta, string Llaves, string ValoresLlaves, object userState) {
            if ((this.ExisteCarpetaOperationCompleted == null)) {
                this.ExisteCarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExisteCarpetaOperationCompleted);
            }
            this.InvokeAsync("ExisteCarpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Llaves,
                        ValoresLlaves}, this.ExisteCarpetaOperationCompleted, userState);
        }
        
        private void OnExisteCarpetaOperationCompleted(object arg) {
            if ((this.ExisteCarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExisteCarpetaCompleted(this, new ExisteCarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Existe_IdReg", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Existe_IdReg(string Archivadores, string Gaveta, string idReg) {
            object[] results = this.Invoke("Existe_IdReg", new object[] {
                        Archivadores,
                        Gaveta,
                        idReg});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Existe_IdRegAsync(string Archivadores, string Gaveta, string idReg) {
            this.Existe_IdRegAsync(Archivadores, Gaveta, idReg, null);
        }
        
        /// <remarks/>
        public void Existe_IdRegAsync(string Archivadores, string Gaveta, string idReg, object userState) {
            if ((this.Existe_IdRegOperationCompleted == null)) {
                this.Existe_IdRegOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExiste_IdRegOperationCompleted);
            }
            this.InvokeAsync("Existe_IdReg", new object[] {
                        Archivadores,
                        Gaveta,
                        idReg}, this.Existe_IdRegOperationCompleted, userState);
        }
        
        private void OnExiste_IdRegOperationCompleted(object arg) {
            if ((this.Existe_IdRegCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Existe_IdRegCompleted(this, new Existe_IdRegCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Llaves", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Llaves(string Archivadores, string Gaveta, string Id_Gaveta) {
            object[] results = this.Invoke("Llaves", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LlavesAsync(string Archivadores, string Gaveta, string Id_Gaveta) {
            this.LlavesAsync(Archivadores, Gaveta, Id_Gaveta, null);
        }
        
        /// <remarks/>
        public void LlavesAsync(string Archivadores, string Gaveta, string Id_Gaveta, object userState) {
            if ((this.LlavesOperationCompleted == null)) {
                this.LlavesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLlavesOperationCompleted);
            }
            this.InvokeAsync("Llaves", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta}, this.LlavesOperationCompleted, userState);
        }
        
        private void OnLlavesOperationCompleted(object arg) {
            if ((this.LlavesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LlavesCompleted(this, new LlavesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Modificar_Carpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Modificar_Carpeta(string Usuario, string Clave, string Archivadores, string Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves, string vLlavesModificar, string ValoresNuevos) {
            object[] results = this.Invoke("Modificar_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        vLlavesModificar,
                        ValoresNuevos});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Modificar_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string vLlavesModificar, string ValoresNuevos) {
            this.Modificar_CarpetaAsync(Usuario, Clave, Archivadores, Gaveta, Llaves1, ValoresLlaves, vLlavesModificar, ValoresNuevos, null);
        }
        
        /// <remarks/>
        public void Modificar_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string vLlavesModificar, string ValoresNuevos, object userState) {
            if ((this.Modificar_CarpetaOperationCompleted == null)) {
                this.Modificar_CarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModificar_CarpetaOperationCompleted);
            }
            this.InvokeAsync("Modificar_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        vLlavesModificar,
                        ValoresNuevos}, this.Modificar_CarpetaOperationCompleted, userState);
        }
        
        private void OnModificar_CarpetaOperationCompleted(object arg) {
            if ((this.Modificar_CarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Modificar_CarpetaCompleted(this, new Modificar_CarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ModificarCarpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModificarCarpeta(string Usuario, string Clave, string Archivadores, string Gaveta, string idgav, string idreg, string vLlavesModificar, string ValoresNuevos) {
            object[] results = this.Invoke("ModificarCarpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idgav,
                        idreg,
                        vLlavesModificar,
                        ValoresNuevos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModificarCarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idgav, string idreg, string vLlavesModificar, string ValoresNuevos) {
            this.ModificarCarpetaAsync(Usuario, Clave, Archivadores, Gaveta, idgav, idreg, vLlavesModificar, ValoresNuevos, null);
        }
        
        /// <remarks/>
        public void ModificarCarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idgav, string idreg, string vLlavesModificar, string ValoresNuevos, object userState) {
            if ((this.ModificarCarpetaOperationCompleted == null)) {
                this.ModificarCarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModificarCarpetaOperationCompleted);
            }
            this.InvokeAsync("ModificarCarpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idgav,
                        idreg,
                        vLlavesModificar,
                        ValoresNuevos}, this.ModificarCarpetaOperationCompleted, userState);
        }
        
        private void OnModificarCarpetaOperationCompleted(object arg) {
            if ((this.ModificarCarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModificarCarpetaCompleted(this, new ModificarCarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Carpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Carpeta(string Usuario, string Clave, string Archivadores, string Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves) {
            object[] results = this.Invoke("Insertar_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves) {
            this.Insertar_CarpetaAsync(Usuario, Clave, Archivadores, Gaveta, Llaves1, ValoresLlaves, null);
        }
        
        /// <remarks/>
        public void Insertar_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, object userState) {
            if ((this.Insertar_CarpetaOperationCompleted == null)) {
                this.Insertar_CarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_CarpetaOperationCompleted);
            }
            this.InvokeAsync("Insertar_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves}, this.Insertar_CarpetaOperationCompleted, userState);
        }
        
        private void OnInsertar_CarpetaOperationCompleted(object arg) {
            if ((this.Insertar_CarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_CarpetaCompleted(this, new Insertar_CarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Arbol_Estructura", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Arbol_Estructura(string Usuario, string Clave, bool MappingTypeAttribute) {
            object[] results = this.Invoke("Arbol_Estructura", new object[] {
                        Usuario,
                        Clave,
                        MappingTypeAttribute});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Arbol_EstructuraAsync(string Usuario, string Clave, bool MappingTypeAttribute) {
            this.Arbol_EstructuraAsync(Usuario, Clave, MappingTypeAttribute, null);
        }
        
        /// <remarks/>
        public void Arbol_EstructuraAsync(string Usuario, string Clave, bool MappingTypeAttribute, object userState) {
            if ((this.Arbol_EstructuraOperationCompleted == null)) {
                this.Arbol_EstructuraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArbol_EstructuraOperationCompleted);
            }
            this.InvokeAsync("Arbol_Estructura", new object[] {
                        Usuario,
                        Clave,
                        MappingTypeAttribute}, this.Arbol_EstructuraOperationCompleted, userState);
        }
        
        private void OnArbol_EstructuraOperationCompleted(object arg) {
            if ((this.Arbol_EstructuraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Arbol_EstructuraCompleted(this, new Arbol_EstructuraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/EsUsuario", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EsUsuario(string Usuario, string Clave) {
            object[] results = this.Invoke("EsUsuario", new object[] {
                        Usuario,
                        Clave});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EsUsuarioAsync(string Usuario, string Clave) {
            this.EsUsuarioAsync(Usuario, Clave, null);
        }
        
        /// <remarks/>
        public void EsUsuarioAsync(string Usuario, string Clave, object userState) {
            if ((this.EsUsuarioOperationCompleted == null)) {
                this.EsUsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEsUsuarioOperationCompleted);
            }
            this.InvokeAsync("EsUsuario", new object[] {
                        Usuario,
                        Clave}, this.EsUsuarioOperationCompleted, userState);
        }
        
        private void OnEsUsuarioOperationCompleted(object arg) {
            if ((this.EsUsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EsUsuarioCompleted(this, new EsUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Parametros_Globales", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Parametros_Globales(string Usuario, string Clave) {
            object[] results = this.Invoke("Parametros_Globales", new object[] {
                        Usuario,
                        Clave});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Parametros_GlobalesAsync(string Usuario, string Clave) {
            this.Parametros_GlobalesAsync(Usuario, Clave, null);
        }
        
        /// <remarks/>
        public void Parametros_GlobalesAsync(string Usuario, string Clave, object userState) {
            if ((this.Parametros_GlobalesOperationCompleted == null)) {
                this.Parametros_GlobalesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParametros_GlobalesOperationCompleted);
            }
            this.InvokeAsync("Parametros_Globales", new object[] {
                        Usuario,
                        Clave}, this.Parametros_GlobalesOperationCompleted, userState);
        }
        
        private void OnParametros_GlobalesOperationCompleted(object arg) {
            if ((this.Parametros_GlobalesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Parametros_GlobalesCompleted(this, new Parametros_GlobalesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Devuelve_Ids_Gaveta_Carpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Devuelve_Ids_Gaveta_Carpeta(string Usuario, string Clave, string Archivadores, string Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves) {
            object[] results = this.Invoke("Devuelve_Ids_Gaveta_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Devuelve_Ids_Gaveta_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves) {
            this.Devuelve_Ids_Gaveta_CarpetaAsync(Usuario, Clave, Archivadores, Gaveta, Llaves1, ValoresLlaves, null);
        }
        
        /// <remarks/>
        public void Devuelve_Ids_Gaveta_CarpetaAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, object userState) {
            if ((this.Devuelve_Ids_Gaveta_CarpetaOperationCompleted == null)) {
                this.Devuelve_Ids_Gaveta_CarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDevuelve_Ids_Gaveta_CarpetaOperationCompleted);
            }
            this.InvokeAsync("Devuelve_Ids_Gaveta_Carpeta", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves}, this.Devuelve_Ids_Gaveta_CarpetaOperationCompleted, userState);
        }
        
        private void OnDevuelve_Ids_Gaveta_CarpetaOperationCompleted(object arg) {
            if ((this.Devuelve_Ids_Gaveta_CarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Devuelve_Ids_Gaveta_CarpetaCompleted(this, new Devuelve_Ids_Gaveta_CarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_De_Documentos", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_De_Documentos(string Id_Carpeta) {
            object[] results = this.Invoke("Lista_De_Documentos", new object[] {
                        Id_Carpeta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_De_DocumentosAsync(string Id_Carpeta) {
            this.Lista_De_DocumentosAsync(Id_Carpeta, null);
        }
        
        /// <remarks/>
        public void Lista_De_DocumentosAsync(string Id_Carpeta, object userState) {
            if ((this.Lista_De_DocumentosOperationCompleted == null)) {
                this.Lista_De_DocumentosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_De_DocumentosOperationCompleted);
            }
            this.InvokeAsync("Lista_De_Documentos", new object[] {
                        Id_Carpeta}, this.Lista_De_DocumentosOperationCompleted, userState);
        }
        
        private void OnLista_De_DocumentosOperationCompleted(object arg) {
            if ((this.Lista_De_DocumentosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_De_DocumentosCompleted(this, new Lista_De_DocumentosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Buscar_Carpetas", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Buscar_Carpetas(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves) {
            object[] results = this.Invoke("Buscar_Carpetas", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Gaveta,
                        Llaves1,
                        ValoresLlaves});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Buscar_CarpetasAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Gaveta, string Llaves1, string ValoresLlaves) {
            this.Buscar_CarpetasAsync(Usuario, Clave, Archivadores, Gaveta, Id_Gaveta, Llaves1, ValoresLlaves, null);
        }
        
        /// <remarks/>
        public void Buscar_CarpetasAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Gaveta, string Llaves1, string ValoresLlaves, object userState) {
            if ((this.Buscar_CarpetasOperationCompleted == null)) {
                this.Buscar_CarpetasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuscar_CarpetasOperationCompleted);
            }
            this.InvokeAsync("Buscar_Carpetas", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Gaveta,
                        Llaves1,
                        ValoresLlaves}, this.Buscar_CarpetasOperationCompleted, userState);
        }
        
        private void OnBuscar_CarpetasOperationCompleted(object arg) {
            if ((this.Buscar_CarpetasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buscar_CarpetasCompleted(this, new Buscar_CarpetasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Datos_De_LaCarpeta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] Datos_De_LaCarpeta(string Archivadores, string Gaveta, string Id_Gaveta, string Id_Carpeta) {
            object[] results = this.Invoke("Datos_De_LaCarpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta,
                        Id_Carpeta});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void Datos_De_LaCarpetaAsync(string Archivadores, string Gaveta, string Id_Gaveta, string Id_Carpeta) {
            this.Datos_De_LaCarpetaAsync(Archivadores, Gaveta, Id_Gaveta, Id_Carpeta, null);
        }
        
        /// <remarks/>
        public void Datos_De_LaCarpetaAsync(string Archivadores, string Gaveta, string Id_Gaveta, string Id_Carpeta, object userState) {
            if ((this.Datos_De_LaCarpetaOperationCompleted == null)) {
                this.Datos_De_LaCarpetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDatos_De_LaCarpetaOperationCompleted);
            }
            this.InvokeAsync("Datos_De_LaCarpeta", new object[] {
                        Archivadores,
                        Gaveta,
                        Id_Gaveta,
                        Id_Carpeta}, this.Datos_De_LaCarpetaOperationCompleted, userState);
        }
        
        private void OnDatos_De_LaCarpetaOperationCompleted(object arg) {
            if ((this.Datos_De_LaCarpetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Datos_De_LaCarpetaCompleted(this, new Datos_De_LaCarpetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Archivar_Documento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Archivar_Documento(string Usuario, string Clave, string Archivadores, string Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves, string Archivo) {
            object[] results = this.Invoke("Archivar_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        Archivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Archivar_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string Archivo) {
            this.Archivar_DocumentoAsync(Usuario, Clave, Archivadores, Gaveta, Llaves1, ValoresLlaves, Archivo, null);
        }
        
        /// <remarks/>
        public void Archivar_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string Archivo, object userState) {
            if ((this.Archivar_DocumentoOperationCompleted == null)) {
                this.Archivar_DocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivar_DocumentoOperationCompleted);
            }
            this.InvokeAsync("Archivar_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        Archivo}, this.Archivar_DocumentoOperationCompleted, userState);
        }
        
        private void OnArchivar_DocumentoOperationCompleted(object arg) {
            if ((this.Archivar_DocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Archivar_DocumentoCompleted(this, new Archivar_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ArchivarDocumento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ArchivarDocumento(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo) {
            object[] results = this.Invoke("ArchivarDocumento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idreg,
                        Archivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ArchivarDocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo) {
            this.ArchivarDocumentoAsync(Usuario, Clave, Archivadores, Gaveta, idreg, Archivo, null);
        }
        
        /// <remarks/>
        public void ArchivarDocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo, object userState) {
            if ((this.ArchivarDocumentoOperationCompleted == null)) {
                this.ArchivarDocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivarDocumentoOperationCompleted);
            }
            this.InvokeAsync("ArchivarDocumento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idreg,
                        Archivo}, this.ArchivarDocumentoOperationCompleted, userState);
        }
        
        private void OnArchivarDocumentoOperationCompleted(object arg) {
            if ((this.ArchivarDocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchivarDocumentoCompleted(this, new ArchivarDocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ArchivarDocumentoDevuelveIdObjeto", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ArchivarDocumentoDevuelveIdObjeto(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo) {
            object[] results = this.Invoke("ArchivarDocumentoDevuelveIdObjeto", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idreg,
                        Archivo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ArchivarDocumentoDevuelveIdObjetoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo) {
            this.ArchivarDocumentoDevuelveIdObjetoAsync(Usuario, Clave, Archivadores, Gaveta, idreg, Archivo, null);
        }
        
        /// <remarks/>
        public void ArchivarDocumentoDevuelveIdObjetoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idreg, string Archivo, object userState) {
            if ((this.ArchivarDocumentoDevuelveIdObjetoOperationCompleted == null)) {
                this.ArchivarDocumentoDevuelveIdObjetoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivarDocumentoDevuelveIdObjetoOperationCompleted);
            }
            this.InvokeAsync("ArchivarDocumentoDevuelveIdObjeto", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idreg,
                        Archivo}, this.ArchivarDocumentoDevuelveIdObjetoOperationCompleted, userState);
        }
        
        private void OnArchivarDocumentoDevuelveIdObjetoOperationCompleted(object arg) {
            if ((this.ArchivarDocumentoDevuelveIdObjetoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchivarDocumentoDevuelveIdObjetoCompleted(this, new ArchivarDocumentoDevuelveIdObjetoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Archivar_DocumentoByte", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Archivar_DocumentoByte(string Usuario, string Clave, string Archivadores, string Gaveta, [System.Xml.Serialization.XmlElementAttribute("Llaves")] string Llaves1, string ValoresLlaves, string NombreArchivo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File_byte) {
            object[] results = this.Invoke("Archivar_DocumentoByte", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        NombreArchivo,
                        File_byte});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Archivar_DocumentoByteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string NombreArchivo, byte[] File_byte) {
            this.Archivar_DocumentoByteAsync(Usuario, Clave, Archivadores, Gaveta, Llaves1, ValoresLlaves, NombreArchivo, File_byte, null);
        }
        
        /// <remarks/>
        public void Archivar_DocumentoByteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Llaves1, string ValoresLlaves, string NombreArchivo, byte[] File_byte, object userState) {
            if ((this.Archivar_DocumentoByteOperationCompleted == null)) {
                this.Archivar_DocumentoByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivar_DocumentoByteOperationCompleted);
            }
            this.InvokeAsync("Archivar_DocumentoByte", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Llaves1,
                        ValoresLlaves,
                        NombreArchivo,
                        File_byte}, this.Archivar_DocumentoByteOperationCompleted, userState);
        }
        
        private void OnArchivar_DocumentoByteOperationCompleted(object arg) {
            if ((this.Archivar_DocumentoByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Archivar_DocumentoByteCompleted(this, new Archivar_DocumentoByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ArchivarDocumentoByte", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ArchivarDocumentoByte(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File_byte) {
            object[] results = this.Invoke("ArchivarDocumentoByte", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idReg,
                        NombreArchivo,
                        File_byte});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ArchivarDocumentoByteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, byte[] File_byte) {
            this.ArchivarDocumentoByteAsync(Usuario, Clave, Archivadores, Gaveta, idReg, NombreArchivo, File_byte, null);
        }
        
        /// <remarks/>
        public void ArchivarDocumentoByteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, byte[] File_byte, object userState) {
            if ((this.ArchivarDocumentoByteOperationCompleted == null)) {
                this.ArchivarDocumentoByteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivarDocumentoByteOperationCompleted);
            }
            this.InvokeAsync("ArchivarDocumentoByte", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idReg,
                        NombreArchivo,
                        File_byte}, this.ArchivarDocumentoByteOperationCompleted, userState);
        }
        
        private void OnArchivarDocumentoByteOperationCompleted(object arg) {
            if ((this.ArchivarDocumentoByteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchivarDocumentoByteCompleted(this, new ArchivarDocumentoByteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/ArchivarDocumentoByteDevuelveIdObjeto", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ArchivarDocumentoByteDevuelveIdObjeto(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] File_byte) {
            object[] results = this.Invoke("ArchivarDocumentoByteDevuelveIdObjeto", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idReg,
                        NombreArchivo,
                        File_byte});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ArchivarDocumentoByteDevuelveIdObjetoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, byte[] File_byte) {
            this.ArchivarDocumentoByteDevuelveIdObjetoAsync(Usuario, Clave, Archivadores, Gaveta, idReg, NombreArchivo, File_byte, null);
        }
        
        /// <remarks/>
        public void ArchivarDocumentoByteDevuelveIdObjetoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string idReg, string NombreArchivo, byte[] File_byte, object userState) {
            if ((this.ArchivarDocumentoByteDevuelveIdObjetoOperationCompleted == null)) {
                this.ArchivarDocumentoByteDevuelveIdObjetoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchivarDocumentoByteDevuelveIdObjetoOperationCompleted);
            }
            this.InvokeAsync("ArchivarDocumentoByteDevuelveIdObjeto", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        idReg,
                        NombreArchivo,
                        File_byte}, this.ArchivarDocumentoByteDevuelveIdObjetoOperationCompleted, userState);
        }
        
        private void OnArchivarDocumentoByteDevuelveIdObjetoOperationCompleted(object arg) {
            if ((this.ArchivarDocumentoByteDevuelveIdObjetoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchivarDocumentoByteDevuelveIdObjetoCompleted(this, new ArchivarDocumentoByteDevuelveIdObjetoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Visor_Documento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Visor_Documento(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj) {
            object[] results = this.Invoke("Visor_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Visor_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj) {
            this.Visor_DocumentoAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, null);
        }
        
        /// <remarks/>
        public void Visor_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, object userState) {
            if ((this.Visor_DocumentoOperationCompleted == null)) {
                this.Visor_DocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVisor_DocumentoOperationCompleted);
            }
            this.InvokeAsync("Visor_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj}, this.Visor_DocumentoOperationCompleted, userState);
        }
        
        private void OnVisor_DocumentoOperationCompleted(object arg) {
            if ((this.Visor_DocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Visor_DocumentoCompleted(this, new Visor_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Visor_Documento_Mail", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Visor_Documento_Mail(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj) {
            object[] results = this.Invoke("Visor_Documento_Mail", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Visor_Documento_MailAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj) {
            this.Visor_Documento_MailAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, null);
        }
        
        /// <remarks/>
        public void Visor_Documento_MailAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, object userState) {
            if ((this.Visor_Documento_MailOperationCompleted == null)) {
                this.Visor_Documento_MailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVisor_Documento_MailOperationCompleted);
            }
            this.InvokeAsync("Visor_Documento_Mail", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj}, this.Visor_Documento_MailOperationCompleted, userState);
        }
        
        private void OnVisor_Documento_MailOperationCompleted(object arg) {
            if ((this.Visor_Documento_MailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Visor_Documento_MailCompleted(this, new Visor_Documento_MailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Descargar_Documento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Descargar_Documento(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj) {
            object[] results = this.Invoke("Descargar_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        xIde_Obj});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Descargar_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj) {
            this.Descargar_DocumentoAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, xIde_Obj, null);
        }
        
        /// <remarks/>
        public void Descargar_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj, object userState) {
            if ((this.Descargar_DocumentoOperationCompleted == null)) {
                this.Descargar_DocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescargar_DocumentoOperationCompleted);
            }
            this.InvokeAsync("Descargar_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        xIde_Obj}, this.Descargar_DocumentoOperationCompleted, userState);
        }
        
        private void OnDescargar_DocumentoOperationCompleted(object arg) {
            if ((this.Descargar_DocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Descargar_DocumentoCompleted(this, new Descargar_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Visor_Documento_User_Temp", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Visor_Documento_User_Temp(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string UsuarioTemp) {
            object[] results = this.Invoke("Visor_Documento_User_Temp", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        UsuarioTemp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Visor_Documento_User_TempAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string UsuarioTemp) {
            this.Visor_Documento_User_TempAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, UsuarioTemp, null);
        }
        
        /// <remarks/>
        public void Visor_Documento_User_TempAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string UsuarioTemp, object userState) {
            if ((this.Visor_Documento_User_TempOperationCompleted == null)) {
                this.Visor_Documento_User_TempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVisor_Documento_User_TempOperationCompleted);
            }
            this.InvokeAsync("Visor_Documento_User_Temp", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        UsuarioTemp}, this.Visor_Documento_User_TempOperationCompleted, userState);
        }
        
        private void OnVisor_Documento_User_TempOperationCompleted(object arg) {
            if ((this.Visor_Documento_User_TempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Visor_Documento_User_TempCompleted(this, new Visor_Documento_User_TempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Descargar_Documento_User_Temp", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Descargar_Documento_User_Temp(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj, string UsuarioTemp) {
            object[] results = this.Invoke("Descargar_Documento_User_Temp", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        xIde_Obj,
                        UsuarioTemp});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Descargar_Documento_User_TempAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj, string UsuarioTemp) {
            this.Descargar_Documento_User_TempAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, xIde_Obj, UsuarioTemp, null);
        }
        
        /// <remarks/>
        public void Descargar_Documento_User_TempAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, bool xIde_Obj, string UsuarioTemp, object userState) {
            if ((this.Descargar_Documento_User_TempOperationCompleted == null)) {
                this.Descargar_Documento_User_TempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDescargar_Documento_User_TempOperationCompleted);
            }
            this.InvokeAsync("Descargar_Documento_User_Temp", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        xIde_Obj,
                        UsuarioTemp}, this.Descargar_Documento_User_TempOperationCompleted, userState);
        }
        
        private void OnDescargar_Documento_User_TempOperationCompleted(object arg) {
            if ((this.Descargar_Documento_User_TempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Descargar_Documento_User_TempCompleted(this, new Descargar_Documento_User_TempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Crear_Usuario", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Crear_Usuario(string Usuario, string Clave, string NUsuario, string NClave, string NNombre, string NCorreo) {
            object[] results = this.Invoke("Crear_Usuario", new object[] {
                        Usuario,
                        Clave,
                        NUsuario,
                        NClave,
                        NNombre,
                        NCorreo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Crear_UsuarioAsync(string Usuario, string Clave, string NUsuario, string NClave, string NNombre, string NCorreo) {
            this.Crear_UsuarioAsync(Usuario, Clave, NUsuario, NClave, NNombre, NCorreo, null);
        }
        
        /// <remarks/>
        public void Crear_UsuarioAsync(string Usuario, string Clave, string NUsuario, string NClave, string NNombre, string NCorreo, object userState) {
            if ((this.Crear_UsuarioOperationCompleted == null)) {
                this.Crear_UsuarioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrear_UsuarioOperationCompleted);
            }
            this.InvokeAsync("Crear_Usuario", new object[] {
                        Usuario,
                        Clave,
                        NUsuario,
                        NClave,
                        NNombre,
                        NCorreo}, this.Crear_UsuarioOperationCompleted, userState);
        }
        
        private void OnCrear_UsuarioOperationCompleted(object arg) {
            if ((this.Crear_UsuarioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Crear_UsuarioCompleted(this, new Crear_UsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Cambiar_Clave", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Cambiar_Clave(string Usuario, string Clave, string NClave) {
            object[] results = this.Invoke("Cambiar_Clave", new object[] {
                        Usuario,
                        Clave,
                        NClave});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Cambiar_ClaveAsync(string Usuario, string Clave, string NClave) {
            this.Cambiar_ClaveAsync(Usuario, Clave, NClave, null);
        }
        
        /// <remarks/>
        public void Cambiar_ClaveAsync(string Usuario, string Clave, string NClave, object userState) {
            if ((this.Cambiar_ClaveOperationCompleted == null)) {
                this.Cambiar_ClaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCambiar_ClaveOperationCompleted);
            }
            this.InvokeAsync("Cambiar_Clave", new object[] {
                        Usuario,
                        Clave,
                        NClave}, this.Cambiar_ClaveOperationCompleted, userState);
        }
        
        private void OnCambiar_ClaveOperationCompleted(object arg) {
            if ((this.Cambiar_ClaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Cambiar_ClaveCompleted(this, new Cambiar_ClaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_De_Archivos_Soportados", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_De_Archivos_Soportados() {
            object[] results = this.Invoke("Lista_De_Archivos_Soportados", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_De_Archivos_SoportadosAsync() {
            this.Lista_De_Archivos_SoportadosAsync(null);
        }
        
        /// <remarks/>
        public void Lista_De_Archivos_SoportadosAsync(object userState) {
            if ((this.Lista_De_Archivos_SoportadosOperationCompleted == null)) {
                this.Lista_De_Archivos_SoportadosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_De_Archivos_SoportadosOperationCompleted);
            }
            this.InvokeAsync("Lista_De_Archivos_Soportados", new object[0], this.Lista_De_Archivos_SoportadosOperationCompleted, userState);
        }
        
        private void OnLista_De_Archivos_SoportadosOperationCompleted(object arg) {
            if ((this.Lista_De_Archivos_SoportadosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_De_Archivos_SoportadosCompleted(this, new Lista_De_Archivos_SoportadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Nota_Expediente", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Nota_Expediente(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string Nota) {
            object[] results = this.Invoke("Insertar_Nota_Expediente", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        Nota});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Nota_ExpedienteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string Nota) {
            this.Insertar_Nota_ExpedienteAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, Nota, null);
        }
        
        /// <remarks/>
        public void Insertar_Nota_ExpedienteAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string Nota, object userState) {
            if ((this.Insertar_Nota_ExpedienteOperationCompleted == null)) {
                this.Insertar_Nota_ExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Nota_ExpedienteOperationCompleted);
            }
            this.InvokeAsync("Insertar_Nota_Expediente", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        Nota}, this.Insertar_Nota_ExpedienteOperationCompleted, userState);
        }
        
        private void OnInsertar_Nota_ExpedienteOperationCompleted(object arg) {
            if ((this.Insertar_Nota_ExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Nota_ExpedienteCompleted(this, new Insertar_Nota_ExpedienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Nota_Documento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Insertar_Nota_Documento(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string Nota) {
            object[] results = this.Invoke("Insertar_Nota_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        Nota});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Nota_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string Nota) {
            this.Insertar_Nota_DocumentoAsync(Usuario, Clave, Archivadores, Gaveta, Id_Carpeta, ide_obj, Nota, null);
        }
        
        /// <remarks/>
        public void Insertar_Nota_DocumentoAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string Id_Carpeta, string ide_obj, string Nota, object userState) {
            if ((this.Insertar_Nota_DocumentoOperationCompleted == null)) {
                this.Insertar_Nota_DocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Nota_DocumentoOperationCompleted);
            }
            this.InvokeAsync("Insertar_Nota_Documento", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        Id_Carpeta,
                        ide_obj,
                        Nota}, this.Insertar_Nota_DocumentoOperationCompleted, userState);
        }
        
        private void OnInsertar_Nota_DocumentoOperationCompleted(object arg) {
            if ((this.Insertar_Nota_DocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Nota_DocumentoCompleted(this, new Insertar_Nota_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_Notas_Expediente", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_Notas_Expediente(string Usuario, string Clave, string Id_Carpeta) {
            object[] results = this.Invoke("Lista_Notas_Expediente", new object[] {
                        Usuario,
                        Clave,
                        Id_Carpeta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_Notas_ExpedienteAsync(string Usuario, string Clave, string Id_Carpeta) {
            this.Lista_Notas_ExpedienteAsync(Usuario, Clave, Id_Carpeta, null);
        }
        
        /// <remarks/>
        public void Lista_Notas_ExpedienteAsync(string Usuario, string Clave, string Id_Carpeta, object userState) {
            if ((this.Lista_Notas_ExpedienteOperationCompleted == null)) {
                this.Lista_Notas_ExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_Notas_ExpedienteOperationCompleted);
            }
            this.InvokeAsync("Lista_Notas_Expediente", new object[] {
                        Usuario,
                        Clave,
                        Id_Carpeta}, this.Lista_Notas_ExpedienteOperationCompleted, userState);
        }
        
        private void OnLista_Notas_ExpedienteOperationCompleted(object arg) {
            if ((this.Lista_Notas_ExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_Notas_ExpedienteCompleted(this, new Lista_Notas_ExpedienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_Notas_Documento", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_Notas_Documento(string Usuario, string Clave, string ide_obj) {
            object[] results = this.Invoke("Lista_Notas_Documento", new object[] {
                        Usuario,
                        Clave,
                        ide_obj});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_Notas_DocumentoAsync(string Usuario, string Clave, string ide_obj) {
            this.Lista_Notas_DocumentoAsync(Usuario, Clave, ide_obj, null);
        }
        
        /// <remarks/>
        public void Lista_Notas_DocumentoAsync(string Usuario, string Clave, string ide_obj, object userState) {
            if ((this.Lista_Notas_DocumentoOperationCompleted == null)) {
                this.Lista_Notas_DocumentoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_Notas_DocumentoOperationCompleted);
            }
            this.InvokeAsync("Lista_Notas_Documento", new object[] {
                        Usuario,
                        Clave,
                        ide_obj}, this.Lista_Notas_DocumentoOperationCompleted, userState);
        }
        
        private void OnLista_Notas_DocumentoOperationCompleted(object arg) {
            if ((this.Lista_Notas_DocumentoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_Notas_DocumentoCompleted(this, new Lista_Notas_DocumentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Modulo_Acc", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Modulo_Acc(string Usuario, string Clave, int modulo) {
            object[] results = this.Invoke("Modulo_Acc", new object[] {
                        Usuario,
                        Clave,
                        modulo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Modulo_AccAsync(string Usuario, string Clave, int modulo) {
            this.Modulo_AccAsync(Usuario, Clave, modulo, null);
        }
        
        /// <remarks/>
        public void Modulo_AccAsync(string Usuario, string Clave, int modulo, object userState) {
            if ((this.Modulo_AccOperationCompleted == null)) {
                this.Modulo_AccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModulo_AccOperationCompleted);
            }
            this.InvokeAsync("Modulo_Acc", new object[] {
                        Usuario,
                        Clave,
                        modulo}, this.Modulo_AccOperationCompleted, userState);
        }
        
        private void OnModulo_AccOperationCompleted(object arg) {
            if ((this.Modulo_AccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Modulo_AccCompleted(this, new Modulo_AccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Carpeta_Acc", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertar_Carpeta_Acc(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            object[] results = this.Invoke("Insertar_Carpeta_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Carpeta_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            this.Insertar_Carpeta_AccAsync(Usuario, Clave, Archivadores, Gaveta, IdGaveta, null);
        }
        
        /// <remarks/>
        public void Insertar_Carpeta_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta, object userState) {
            if ((this.Insertar_Carpeta_AccOperationCompleted == null)) {
                this.Insertar_Carpeta_AccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Carpeta_AccOperationCompleted);
            }
            this.InvokeAsync("Insertar_Carpeta_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta}, this.Insertar_Carpeta_AccOperationCompleted, userState);
        }
        
        private void OnInsertar_Carpeta_AccOperationCompleted(object arg) {
            if ((this.Insertar_Carpeta_AccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Carpeta_AccCompleted(this, new Insertar_Carpeta_AccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Nota_Acc", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertar_Nota_Acc(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            object[] results = this.Invoke("Insertar_Nota_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Nota_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            this.Insertar_Nota_AccAsync(Usuario, Clave, Archivadores, Gaveta, IdGaveta, null);
        }
        
        /// <remarks/>
        public void Insertar_Nota_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta, object userState) {
            if ((this.Insertar_Nota_AccOperationCompleted == null)) {
                this.Insertar_Nota_AccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Nota_AccOperationCompleted);
            }
            this.InvokeAsync("Insertar_Nota_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta}, this.Insertar_Nota_AccOperationCompleted, userState);
        }
        
        private void OnInsertar_Nota_AccOperationCompleted(object arg) {
            if ((this.Insertar_Nota_AccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Nota_AccCompleted(this, new Insertar_Nota_AccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Insertar_Caducidad_Acc", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Insertar_Caducidad_Acc(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            object[] results = this.Invoke("Insertar_Caducidad_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Insertar_Caducidad_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            this.Insertar_Caducidad_AccAsync(Usuario, Clave, Archivadores, Gaveta, IdGaveta, null);
        }
        
        /// <remarks/>
        public void Insertar_Caducidad_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta, object userState) {
            if ((this.Insertar_Caducidad_AccOperationCompleted == null)) {
                this.Insertar_Caducidad_AccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertar_Caducidad_AccOperationCompleted);
            }
            this.InvokeAsync("Insertar_Caducidad_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta}, this.Insertar_Caducidad_AccOperationCompleted, userState);
        }
        
        private void OnInsertar_Caducidad_AccOperationCompleted(object arg) {
            if ((this.Insertar_Caducidad_AccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insertar_Caducidad_AccCompleted(this, new Insertar_Caducidad_AccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_Usuarios_Caducidad", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Lista_Usuarios_Caducidad(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            object[] results = this.Invoke("Lista_Usuarios_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_Usuarios_CaducidadAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            this.Lista_Usuarios_CaducidadAsync(Usuario, Clave, Archivadores, Gaveta, IdGaveta, null);
        }
        
        /// <remarks/>
        public void Lista_Usuarios_CaducidadAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta, object userState) {
            if ((this.Lista_Usuarios_CaducidadOperationCompleted == null)) {
                this.Lista_Usuarios_CaducidadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_Usuarios_CaducidadOperationCompleted);
            }
            this.InvokeAsync("Lista_Usuarios_Caducidad", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta}, this.Lista_Usuarios_CaducidadOperationCompleted, userState);
        }
        
        private void OnLista_Usuarios_CaducidadOperationCompleted(object arg) {
            if ((this.Lista_Usuarios_CaducidadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_Usuarios_CaducidadCompleted(this, new Lista_Usuarios_CaducidadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Devolver_Root_Gaveta", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Devolver_Root_Gaveta(string IdGaveta) {
            object[] results = this.Invoke("Devolver_Root_Gaveta", new object[] {
                        IdGaveta});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Devolver_Root_GavetaAsync(string IdGaveta) {
            this.Devolver_Root_GavetaAsync(IdGaveta, null);
        }
        
        /// <remarks/>
        public void Devolver_Root_GavetaAsync(string IdGaveta, object userState) {
            if ((this.Devolver_Root_GavetaOperationCompleted == null)) {
                this.Devolver_Root_GavetaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDevolver_Root_GavetaOperationCompleted);
            }
            this.InvokeAsync("Devolver_Root_Gaveta", new object[] {
                        IdGaveta}, this.Devolver_Root_GavetaOperationCompleted, userState);
        }
        
        private void OnDevolver_Root_GavetaOperationCompleted(object arg) {
            if ((this.Devolver_Root_GavetaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Devolver_Root_GavetaCompleted(this, new Devolver_Root_GavetaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_Usuarios", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Lista_Usuarios(string Usuario, string Clave, string blo_usu) {
            object[] results = this.Invoke("Lista_Usuarios", new object[] {
                        Usuario,
                        Clave,
                        blo_usu});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_UsuariosAsync(string Usuario, string Clave, string blo_usu) {
            this.Lista_UsuariosAsync(Usuario, Clave, blo_usu, null);
        }
        
        /// <remarks/>
        public void Lista_UsuariosAsync(string Usuario, string Clave, string blo_usu, object userState) {
            if ((this.Lista_UsuariosOperationCompleted == null)) {
                this.Lista_UsuariosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_UsuariosOperationCompleted);
            }
            this.InvokeAsync("Lista_Usuarios", new object[] {
                        Usuario,
                        Clave,
                        blo_usu}, this.Lista_UsuariosOperationCompleted, userState);
        }
        
        private void OnLista_UsuariosOperationCompleted(object arg) {
            if ((this.Lista_UsuariosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_UsuariosCompleted(this, new Lista_UsuariosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/start_Incremental", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool start_Incremental() {
            object[] results = this.Invoke("start_Incremental", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void start_IncrementalAsync() {
            this.start_IncrementalAsync(null);
        }
        
        /// <remarks/>
        public void start_IncrementalAsync(object userState) {
            if ((this.start_IncrementalOperationCompleted == null)) {
                this.start_IncrementalOperationCompleted = new System.Threading.SendOrPostCallback(this.Onstart_IncrementalOperationCompleted);
            }
            this.InvokeAsync("start_Incremental", new object[0], this.start_IncrementalOperationCompleted, userState);
        }
        
        private void Onstart_IncrementalOperationCompleted(object arg) {
            if ((this.start_IncrementalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.start_IncrementalCompleted(this, new start_IncrementalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Documentador_Acc", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Documentador_Acc(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            object[] results = this.Invoke("Documentador_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Documentador_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta) {
            this.Documentador_AccAsync(Usuario, Clave, Archivadores, Gaveta, IdGaveta, null);
        }
        
        /// <remarks/>
        public void Documentador_AccAsync(string Usuario, string Clave, string Archivadores, string Gaveta, string IdGaveta, object userState) {
            if ((this.Documentador_AccOperationCompleted == null)) {
                this.Documentador_AccOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocumentador_AccOperationCompleted);
            }
            this.InvokeAsync("Documentador_Acc", new object[] {
                        Usuario,
                        Clave,
                        Archivadores,
                        Gaveta,
                        IdGaveta}, this.Documentador_AccOperationCompleted, userState);
        }
        
        private void OnDocumentador_AccOperationCompleted(object arg) {
            if ((this.Documentador_AccCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Documentador_AccCompleted(this, new Documentador_AccCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Lista_De_Documentos_UI", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Lista_De_Documentos_UI(string Usuario, string Clave, string Id_Gaveta, string Id_Carpeta, string Contenido_Nombre_Archivos) {
            object[] results = this.Invoke("Lista_De_Documentos_UI", new object[] {
                        Usuario,
                        Clave,
                        Id_Gaveta,
                        Id_Carpeta,
                        Contenido_Nombre_Archivos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Lista_De_Documentos_UIAsync(string Usuario, string Clave, string Id_Gaveta, string Id_Carpeta, string Contenido_Nombre_Archivos) {
            this.Lista_De_Documentos_UIAsync(Usuario, Clave, Id_Gaveta, Id_Carpeta, Contenido_Nombre_Archivos, null);
        }
        
        /// <remarks/>
        public void Lista_De_Documentos_UIAsync(string Usuario, string Clave, string Id_Gaveta, string Id_Carpeta, string Contenido_Nombre_Archivos, object userState) {
            if ((this.Lista_De_Documentos_UIOperationCompleted == null)) {
                this.Lista_De_Documentos_UIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLista_De_Documentos_UIOperationCompleted);
            }
            this.InvokeAsync("Lista_De_Documentos_UI", new object[] {
                        Usuario,
                        Clave,
                        Id_Gaveta,
                        Id_Carpeta,
                        Contenido_Nombre_Archivos}, this.Lista_De_Documentos_UIOperationCompleted, userState);
        }
        
        private void OnLista_De_Documentos_UIOperationCompleted(object arg) {
            if ((this.Lista_De_Documentos_UICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Lista_De_Documentos_UICompleted(this, new Lista_De_Documentos_UICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://vision2020serverapi.org/Encriptar_Texto", RequestNamespace="http://vision2020serverapi.org/", ResponseNamespace="http://vision2020serverapi.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Encriptar_Texto(string Texto) {
            object[] results = this.Invoke("Encriptar_Texto", new object[] {
                        Texto});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Encriptar_TextoAsync(string Texto) {
            this.Encriptar_TextoAsync(Texto, null);
        }
        
        /// <remarks/>
        public void Encriptar_TextoAsync(string Texto, object userState) {
            if ((this.Encriptar_TextoOperationCompleted == null)) {
                this.Encriptar_TextoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncriptar_TextoOperationCompleted);
            }
            this.InvokeAsync("Encriptar_Texto", new object[] {
                        Texto}, this.Encriptar_TextoOperationCompleted, userState);
        }
        
        private void OnEncriptar_TextoOperationCompleted(object arg) {
            if ((this.Encriptar_TextoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Encriptar_TextoCompleted(this, new Encriptar_TextoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Caducidad_NotificacionCompletedEventHandler(object sender, Insertar_Caducidad_NotificacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Caducidad_NotificacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Caducidad_NotificacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_CaducidadCompletedEventHandler(object sender, Insertar_CaducidadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_CaducidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_CaducidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Actualizar_CaducidadCompletedEventHandler(object sender, Actualizar_CaducidadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Actualizar_CaducidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Actualizar_CaducidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_idgavetas_UploaderCompletedEventHandler(object sender, Lista_idgavetas_UploaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_idgavetas_UploaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_idgavetas_UploaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AutoCompletar_Texto_LlaveCompletedEventHandler(object sender, AutoCompletar_Texto_LlaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AutoCompletar_Texto_LlaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AutoCompletar_Texto_LlaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Verifica_Acceso_GavetaCompletedEventHandler(object sender, Verifica_Acceso_GavetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Verifica_Acceso_GavetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Verifica_Acceso_GavetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Valores_PredefinidosCompletedEventHandler(object sender, Valores_PredefinidosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Valores_PredefinidosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Valores_PredefinidosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_ValoresCompletedEventHandler(object sender, Lista_ValoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_ValoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_ValoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Existe_CarpetaCompletedEventHandler(object sender, Existe_CarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Existe_CarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Existe_CarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExisteCarpetaCompletedEventHandler(object sender, ExisteCarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExisteCarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExisteCarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Existe_IdRegCompletedEventHandler(object sender, Existe_IdRegCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Existe_IdRegCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Existe_IdRegCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void LlavesCompletedEventHandler(object sender, LlavesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LlavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LlavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Modificar_CarpetaCompletedEventHandler(object sender, Modificar_CarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Modificar_CarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Modificar_CarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ModificarCarpetaCompletedEventHandler(object sender, ModificarCarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModificarCarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModificarCarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_CarpetaCompletedEventHandler(object sender, Insertar_CarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_CarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_CarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Arbol_EstructuraCompletedEventHandler(object sender, Arbol_EstructuraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Arbol_EstructuraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Arbol_EstructuraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EsUsuarioCompletedEventHandler(object sender, EsUsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EsUsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EsUsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Parametros_GlobalesCompletedEventHandler(object sender, Parametros_GlobalesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Parametros_GlobalesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Parametros_GlobalesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Devuelve_Ids_Gaveta_CarpetaCompletedEventHandler(object sender, Devuelve_Ids_Gaveta_CarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Devuelve_Ids_Gaveta_CarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Devuelve_Ids_Gaveta_CarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_De_DocumentosCompletedEventHandler(object sender, Lista_De_DocumentosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_De_DocumentosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_De_DocumentosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Buscar_CarpetasCompletedEventHandler(object sender, Buscar_CarpetasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buscar_CarpetasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buscar_CarpetasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Datos_De_LaCarpetaCompletedEventHandler(object sender, Datos_De_LaCarpetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Datos_De_LaCarpetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Datos_De_LaCarpetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Archivar_DocumentoCompletedEventHandler(object sender, Archivar_DocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Archivar_DocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Archivar_DocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ArchivarDocumentoCompletedEventHandler(object sender, ArchivarDocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchivarDocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchivarDocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ArchivarDocumentoDevuelveIdObjetoCompletedEventHandler(object sender, ArchivarDocumentoDevuelveIdObjetoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchivarDocumentoDevuelveIdObjetoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchivarDocumentoDevuelveIdObjetoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Archivar_DocumentoByteCompletedEventHandler(object sender, Archivar_DocumentoByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Archivar_DocumentoByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Archivar_DocumentoByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ArchivarDocumentoByteCompletedEventHandler(object sender, ArchivarDocumentoByteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchivarDocumentoByteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchivarDocumentoByteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ArchivarDocumentoByteDevuelveIdObjetoCompletedEventHandler(object sender, ArchivarDocumentoByteDevuelveIdObjetoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArchivarDocumentoByteDevuelveIdObjetoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArchivarDocumentoByteDevuelveIdObjetoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Visor_DocumentoCompletedEventHandler(object sender, Visor_DocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Visor_DocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Visor_DocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Visor_Documento_MailCompletedEventHandler(object sender, Visor_Documento_MailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Visor_Documento_MailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Visor_Documento_MailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Descargar_DocumentoCompletedEventHandler(object sender, Descargar_DocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Descargar_DocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Descargar_DocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Visor_Documento_User_TempCompletedEventHandler(object sender, Visor_Documento_User_TempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Visor_Documento_User_TempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Visor_Documento_User_TempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Descargar_Documento_User_TempCompletedEventHandler(object sender, Descargar_Documento_User_TempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Descargar_Documento_User_TempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Descargar_Documento_User_TempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Crear_UsuarioCompletedEventHandler(object sender, Crear_UsuarioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Crear_UsuarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Crear_UsuarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Cambiar_ClaveCompletedEventHandler(object sender, Cambiar_ClaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Cambiar_ClaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Cambiar_ClaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_De_Archivos_SoportadosCompletedEventHandler(object sender, Lista_De_Archivos_SoportadosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_De_Archivos_SoportadosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_De_Archivos_SoportadosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Nota_ExpedienteCompletedEventHandler(object sender, Insertar_Nota_ExpedienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Nota_ExpedienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Nota_ExpedienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Nota_DocumentoCompletedEventHandler(object sender, Insertar_Nota_DocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Nota_DocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Nota_DocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_Notas_ExpedienteCompletedEventHandler(object sender, Lista_Notas_ExpedienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_Notas_ExpedienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_Notas_ExpedienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_Notas_DocumentoCompletedEventHandler(object sender, Lista_Notas_DocumentoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_Notas_DocumentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_Notas_DocumentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Modulo_AccCompletedEventHandler(object sender, Modulo_AccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Modulo_AccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Modulo_AccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Carpeta_AccCompletedEventHandler(object sender, Insertar_Carpeta_AccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Carpeta_AccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Carpeta_AccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Nota_AccCompletedEventHandler(object sender, Insertar_Nota_AccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Nota_AccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Nota_AccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Insertar_Caducidad_AccCompletedEventHandler(object sender, Insertar_Caducidad_AccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insertar_Caducidad_AccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insertar_Caducidad_AccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_Usuarios_CaducidadCompletedEventHandler(object sender, Lista_Usuarios_CaducidadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_Usuarios_CaducidadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_Usuarios_CaducidadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Devolver_Root_GavetaCompletedEventHandler(object sender, Devolver_Root_GavetaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Devolver_Root_GavetaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Devolver_Root_GavetaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_UsuariosCompletedEventHandler(object sender, Lista_UsuariosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_UsuariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_UsuariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void start_IncrementalCompletedEventHandler(object sender, start_IncrementalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class start_IncrementalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal start_IncrementalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Documentador_AccCompletedEventHandler(object sender, Documentador_AccCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Documentador_AccCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Documentador_AccCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Lista_De_Documentos_UICompletedEventHandler(object sender, Lista_De_Documentos_UICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Lista_De_Documentos_UICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Lista_De_Documentos_UICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void Encriptar_TextoCompletedEventHandler(object sender, Encriptar_TextoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Encriptar_TextoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Encriptar_TextoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591