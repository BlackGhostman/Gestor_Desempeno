//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Gestor_Desempeno.CorreoServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback enviarReutilizadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarCorreoDefaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarCorreoPlanoOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarCorreoHtmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarCorreoOperationCompleted;
        
        private System.Threading.SendOrPostCallback enviarCorreoVariosAdjOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::Gestor_Desempeno.Properties.Settings.Default.Gestor_Desempeno_CorreoServiceReference_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event enviarReutilizadoCompletedEventHandler enviarReutilizadoCompleted;
        
        /// <remarks/>
        public event enviarCorreoDefaultCompletedEventHandler enviarCorreoDefaultCompleted;
        
        /// <remarks/>
        public event EnviarCorreoPlanoCompletedEventHandler EnviarCorreoPlanoCompleted;
        
        /// <remarks/>
        public event EnviarCorreoHtmlCompletedEventHandler EnviarCorreoHtmlCompleted;
        
        /// <remarks/>
        public event enviarCorreoCompletedEventHandler enviarCorreoCompleted;
        
        /// <remarks/>
        public event enviarCorreoVariosAdjCompletedEventHandler enviarCorreoVariosAdjCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/enviarReutilizado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string enviarReutilizado(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            object[] results = this.Invoke("enviarReutilizado", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enviarReutilizadoAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.enviarReutilizadoAsync(asunto, mensaje, receptor, emisor, mailuser, mailpwd, mailserver, mailport, ssl, Html, null);
        }
        
        /// <remarks/>
        public void enviarReutilizadoAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html, object userState) {
            if ((this.enviarReutilizadoOperationCompleted == null)) {
                this.enviarReutilizadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarReutilizadoOperationCompleted);
            }
            this.InvokeAsync("enviarReutilizado", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html}, this.enviarReutilizadoOperationCompleted, userState);
        }
        
        private void OnenviarReutilizadoOperationCompleted(object arg) {
            if ((this.enviarReutilizadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarReutilizadoCompleted(this, new enviarReutilizadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/enviarCorreoDefault", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string enviarCorreoDefault(string asunto, string mensaje, string receptor) {
            object[] results = this.Invoke("enviarCorreoDefault", new object[] {
                        asunto,
                        mensaje,
                        receptor});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enviarCorreoDefaultAsync(string asunto, string mensaje, string receptor) {
            this.enviarCorreoDefaultAsync(asunto, mensaje, receptor, null);
        }
        
        /// <remarks/>
        public void enviarCorreoDefaultAsync(string asunto, string mensaje, string receptor, object userState) {
            if ((this.enviarCorreoDefaultOperationCompleted == null)) {
                this.enviarCorreoDefaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarCorreoDefaultOperationCompleted);
            }
            this.InvokeAsync("enviarCorreoDefault", new object[] {
                        asunto,
                        mensaje,
                        receptor}, this.enviarCorreoDefaultOperationCompleted, userState);
        }
        
        private void OnenviarCorreoDefaultOperationCompleted(object arg) {
            if ((this.enviarCorreoDefaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarCorreoDefaultCompleted(this, new enviarCorreoDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarCorreoPlano", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnviarCorreoPlano(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            object[] results = this.Invoke("EnviarCorreoPlano", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarCorreoPlanoAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.EnviarCorreoPlanoAsync(asunto, mensaje, receptor, emisor, mailuser, mailpwd, mailserver, mailport, ssl, Html, null);
        }
        
        /// <remarks/>
        public void EnviarCorreoPlanoAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html, object userState) {
            if ((this.EnviarCorreoPlanoOperationCompleted == null)) {
                this.EnviarCorreoPlanoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarCorreoPlanoOperationCompleted);
            }
            this.InvokeAsync("EnviarCorreoPlano", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html}, this.EnviarCorreoPlanoOperationCompleted, userState);
        }
        
        private void OnEnviarCorreoPlanoOperationCompleted(object arg) {
            if ((this.EnviarCorreoPlanoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarCorreoPlanoCompleted(this, new EnviarCorreoPlanoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnviarCorreoHtml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EnviarCorreoHtml(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.Invoke("EnviarCorreoHtml", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html});
        }
        
        /// <remarks/>
        public void EnviarCorreoHtmlAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.EnviarCorreoHtmlAsync(asunto, mensaje, receptor, emisor, mailuser, mailpwd, mailserver, mailport, ssl, Html, null);
        }
        
        /// <remarks/>
        public void EnviarCorreoHtmlAsync(string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html, object userState) {
            if ((this.EnviarCorreoHtmlOperationCompleted == null)) {
                this.EnviarCorreoHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarCorreoHtmlOperationCompleted);
            }
            this.InvokeAsync("EnviarCorreoHtml", new object[] {
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html}, this.EnviarCorreoHtmlOperationCompleted, userState);
        }
        
        private void OnEnviarCorreoHtmlOperationCompleted(object arg) {
            if ((this.EnviarCorreoHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarCorreoHtmlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/enviarCorreo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string enviarCorreo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] adjunto, string nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            object[] results = this.Invoke("enviarCorreo", new object[] {
                        adjunto,
                        nombreAtach,
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enviarCorreoAsync(byte[] adjunto, string nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.enviarCorreoAsync(adjunto, nombreAtach, asunto, mensaje, receptor, emisor, mailuser, mailpwd, mailserver, mailport, ssl, Html, null);
        }
        
        /// <remarks/>
        public void enviarCorreoAsync(byte[] adjunto, string nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html, object userState) {
            if ((this.enviarCorreoOperationCompleted == null)) {
                this.enviarCorreoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarCorreoOperationCompleted);
            }
            this.InvokeAsync("enviarCorreo", new object[] {
                        adjunto,
                        nombreAtach,
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html}, this.enviarCorreoOperationCompleted, userState);
        }
        
        private void OnenviarCorreoOperationCompleted(object arg) {
            if ((this.enviarCorreoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarCorreoCompleted(this, new enviarCorreoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/enviarCorreoVariosAdj", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string enviarCorreoVariosAdj(byte[][] adjunto, string[] nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            object[] results = this.Invoke("enviarCorreoVariosAdj", new object[] {
                        adjunto,
                        nombreAtach,
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void enviarCorreoVariosAdjAsync(byte[][] adjunto, string[] nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html) {
            this.enviarCorreoVariosAdjAsync(adjunto, nombreAtach, asunto, mensaje, receptor, emisor, mailuser, mailpwd, mailserver, mailport, ssl, Html, null);
        }
        
        /// <remarks/>
        public void enviarCorreoVariosAdjAsync(byte[][] adjunto, string[] nombreAtach, string asunto, string mensaje, string receptor, string emisor, string mailuser, string mailpwd, string mailserver, string mailport, bool ssl, bool Html, object userState) {
            if ((this.enviarCorreoVariosAdjOperationCompleted == null)) {
                this.enviarCorreoVariosAdjOperationCompleted = new System.Threading.SendOrPostCallback(this.OnenviarCorreoVariosAdjOperationCompleted);
            }
            this.InvokeAsync("enviarCorreoVariosAdj", new object[] {
                        adjunto,
                        nombreAtach,
                        asunto,
                        mensaje,
                        receptor,
                        emisor,
                        mailuser,
                        mailpwd,
                        mailserver,
                        mailport,
                        ssl,
                        Html}, this.enviarCorreoVariosAdjOperationCompleted, userState);
        }
        
        private void OnenviarCorreoVariosAdjOperationCompleted(object arg) {
            if ((this.enviarCorreoVariosAdjCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.enviarCorreoVariosAdjCompleted(this, new enviarCorreoVariosAdjCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void enviarReutilizadoCompletedEventHandler(object sender, enviarReutilizadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarReutilizadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarReutilizadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void enviarCorreoDefaultCompletedEventHandler(object sender, enviarCorreoDefaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarCorreoDefaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarCorreoDefaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarCorreoPlanoCompletedEventHandler(object sender, EnviarCorreoPlanoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarCorreoPlanoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarCorreoPlanoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void EnviarCorreoHtmlCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void enviarCorreoCompletedEventHandler(object sender, enviarCorreoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarCorreoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarCorreoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void enviarCorreoVariosAdjCompletedEventHandler(object sender, enviarCorreoVariosAdjCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class enviarCorreoVariosAdjCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal enviarCorreoVariosAdjCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591